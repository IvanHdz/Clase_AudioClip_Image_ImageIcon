/**
 *
 * @author Ivan
 */
import java.applet.AudioClip;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.*;

public class Caballos2 extends javax.swing.JApplet implements ItemListener{
    private JLabel horses;
    private JCheckBox chkHorse1;
    private AudioClip horse1;
    private JCheckBox chkHorse2;
    private AudioClip horse2;
    private JCheckBox chkHorse3;
    private AudioClip horse3;
    private JCheckBox chkHorse4;
    private AudioClip horse4;
    private JPanel pnlCheckBox;
    
    /** Initializes the applet Caballos2 */
    @Override
    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {

                public void run() {
                    initComponents();
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        setLayout(new BorderLayout());
        pnlCheckBox = new JPanel(new GridLayout(2,2));
        
        Toolkit tk = Toolkit.getDefaultToolkit();
        Image imaHorses = tk.getImage(getClass().getResource("horses.png"));

        horses = new JLabel();
        horses.setIcon(new ImageIcon(imaHorses));
        getContentPane().add(horses, BorderLayout.CENTER);


        horse1 = JApplet.newAudioClip(getClass().getResource("horse1.wav"));
        horse2 = JApplet.newAudioClip(getClass().getResource("horse2.wav"));
        horse3 = JApplet.newAudioClip(getClass().getResource("horse3.wav"));
        horse4 = JApplet.newAudioClip(getClass().getResource("horse4.wav"));

        chkHorse1 = new JCheckBox("Caballo 1");
        chkHorse1.setIcon(new ImageIcon(getClass().getResource("horse1.png")));
        chkHorse1.setSelectedIcon(new ImageIcon(
                getClass().getResource("horse1-selected.png")));

        chkHorse1.addItemListener(this);
        pnlCheckBox.add(chkHorse1);

        chkHorse2 = new JCheckBox("Caballo 2");
        chkHorse2.setIcon(new ImageIcon(getClass().getResource("horse2.png")));
        chkHorse2.setSelectedIcon(new ImageIcon(
                getClass().getResource("horse2-selected.png")));
        chkHorse2.addItemListener(this);
        pnlCheckBox.add(chkHorse2);

        chkHorse3 = new JCheckBox("Caballo 3");
        chkHorse3.setIcon(new ImageIcon(getClass().getResource("horse3.png")));
        chkHorse3.setSelectedIcon(new ImageIcon(
                getClass().getResource("horse3-selected.png")));
        chkHorse3.addItemListener(this);
        pnlCheckBox.add(chkHorse3);

        chkHorse4 = new JCheckBox("Caballo 4");
        chkHorse4.setIcon(new ImageIcon(getClass().getResource("horse4.png")));
        chkHorse4.setSelectedIcon(new ImageIcon(
                getClass().getResource("horse4-selected.png")));
        chkHorse4.addItemListener(this);
        pnlCheckBox.add(chkHorse4);
        
        getContentPane().add(pnlCheckBox, BorderLayout.SOUTH);
        setSize(800,487);
        setVisible(true);
    }

    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public void itemStateChanged(ItemEvent e) {
        boolean isSelected;
        /**
         * Con el metodo getStateChange() del ItemEvent que recibe el metodo
         * puedo saber si el JCheckBox fue seleccionado o fue deseleccionado,
         * dependiendo de esto puedo manejar el evento de maneras diferentes.
         */
        isSelected = (e.getStateChange() == ItemEvent.SELECTED);
        /**
         * Del mismo modo que getSource() nos devuelve el componente que realizo
         * el evento en actionPerformed(), getItemSelectable() nos devuelve el
         * componente que realizo el evento en itemStateChanged()
         */
        if (e.getItemSelectable() == chkHorse1) {
            if (isSelected)
                horse1.loop();
            else
                horse1.stop();
        } else if (e.getItemSelectable() == chkHorse2) {
            if (isSelected)
                horse2.loop();
            else
                horse2.stop();
        } else if (e.getItemSelectable() == chkHorse3) {
            if (isSelected)
                horse3.loop();
            else
                horse3.stop();
        } else if (e.getItemSelectable() == chkHorse4) {
            if (isSelected) {
                horse4.loop();
            } else {
                horse4.stop();
            }
        }
    }
}